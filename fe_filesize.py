# author: Gert Jacobusse, gert.jacobusse@rogatio.nl
# licence: FreeBSD
# Copyright (c) 2015, Gert Jacobusse
# All rights reserved.

import glob
import csv
import pandas as pd
import os
from io import BytesIO
import numpy as np
import zipfile

"""
function getcompressedsize
input: path to file
output: compressed size of file
* read file and compress it in memory
"""
def getcompressedsize(fpath):
    inMemoryOutputFile = BytesIO()
    zf = zipfile.ZipFile(inMemoryOutputFile, 'w') 
    zf.write(fpath, compress_type=zipfile.ZIP_DEFLATED)
    s = float(zf.infolist()[0].compress_size)
    zf.close()
    return s

"""
function writefileprops
input: ids of trainset or testset, string "train" or "test"
output: writes train_fileprops or test_fileprops
* extract file properties (size, compressed size, ratios) from all files in train or test set
"""
def writefileprops(ids,trainortest):
    with open('%s_fileprops.csv'%trainortest,'w') as f:
        w=csv.writer(f)
        w.writerow(['md5', 'bytesSize', 'bytesCompressionRate'])
        for i in ids:
            bytsiz=float(os.path.getsize('%s/'%trainortest+ i +'.bytes'))
            bytcr=getcompressedsize('%s/'%trainortest + i + '.bytes')/bytsiz
            
            w.writerow([i, bytsiz, bytcr])
            f.flush()

if __name__ == '__main__':
    train_path = '/home/superroot/malware/train/'
    df_train = pd.read_csv('trainLabels.csv')
    df_test = pd.read_csv('ResultSample.csv')
    
    trainids = df_train['md5'].values
    testids = df_test['md5'].values
    labels = df_train['label'].values
    
    assert len(trainids) == len(labels)
    assert len(trainids) == 5907
    assert len(testids) == 5000

    # get fileprops features
    writefileprops(trainids,'train')
    writefileprops(testids,'test')
    